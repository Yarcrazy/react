{"version":3,"sources":["Table/Cell.js","Table/FixedRow.js","Table/Row.js","Table/Table.js","TestTable.js","App.js","index.js"],"names":["Cell","props","state","fixFlag","rect","this","ref","current","getBoundingClientRect","isFixed","onFillLeftBorderArray","x","num","onFillCellWidth","width","i","React","createRef","className","cellLeft","cellsWidth","tableLeftBorder","scrollLeft","cellsFixedX","setState","onChangeBorder","style","left","minWidth","children","Component","FixedRow","isRowAbsolute","rowRect","onChangeFixedRowBottom","height","rows","top","rowFixed","document","querySelector","isScrolledTop","tableTopBorder","j","undefined","Array","isArray","of","push","map","el","type","key","Row","Table","handleScroll","e","target","scrollTop","handleChangeBorder","includes","handleChangeFixedRowBottom","fixedRowBottom","handleFillLeftBorderArray","cellX","handleFillCellWidth","cellWidth","tableRect","tableRef","paddingTop","child","onScroll","TestTable","Fragment","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.78029d93.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Cell extends React.Component {\r\n\r\n  ref;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fixFlag: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const rect = this.ref.current.getBoundingClientRect();\r\n    if (this.props.isFixed === 'col-fixed') {\r\n      this.props.onFillLeftBorderArray(rect.x, this.props.num);\r\n    }\r\n    this.props.onFillCellWidth(rect.width, this.props.i);\r\n  }\r\n\r\n  // componentDidUpdate(prevProps, prevState, snapshot) {\r\n  //   console.log(this.ref.current.getBoundingClientRect().width);\r\n  //   if (this.ref.current.getBoundingClientRect().width > this.props.cellsWidth[this.props.i]) {\r\n  //     this.props.onFillCellWidth(this.ref.current.getBoundingClientRect().width, this.props.i);\r\n  //     this.setState({width: this.props.cellsWidth[this.props.i]});\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n    this.ref = React.createRef();\r\n    let className = this.props.className + ' ' + (this.props.isFixed ? this.props.isFixed : '');\r\n    let cellLeft = 0;\r\n    let width = this.props.cellsWidth[this.props.i];\r\n    const num = this.props.num;\r\n\r\n    if ((this.props.tableLeftBorder) && (this.props.isFixed === 'col-fixed')) {\r\n\r\n      if ((this.props.scrollLeft >= this.props.cellsFixedX[num] - this.props.tableLeftBorder[num])) {\r\n        if (!this.state.fixFlag) {\r\n          this.setState({fixFlag: true});\r\n          if (this.props.onChangeBorder) {\r\n            this.props.onChangeBorder(this.props.tableLeftBorder[num] + width);\r\n          }\r\n        }\r\n      } else {\r\n        if (this.state.fixFlag) {\r\n          this.setState({fixFlag: false});\r\n          cellLeft = 0;\r\n        }\r\n      }\r\n\r\n      if (this.state.fixFlag) {\r\n        cellLeft = this.props.scrollLeft - this.props.cellsFixedX[num] + this.props.tableLeftBorder[num];\r\n      }\r\n    }\r\n\r\n    return <div className={className} style={{left: cellLeft, minWidth: width}} ref={this.ref}>\r\n      {this.props.children}\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Cell;","import React from 'react';\r\nimport Cell from \"./Cell\";\r\n\r\nclass FixedRow extends React.Component {\r\n\r\n  ref;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isRowAbsolute: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const rowRect = this.ref.current.getBoundingClientRect();\r\n    this.props.onChangeFixedRowBottom(rowRect.height);\r\n    this.setState({width: rowRect.width});\r\n  }\r\n\r\n  render() {\r\n    let rows = [];\r\n    let className = this.props.className + ' ' + (this.props.isFixed ? this.props.isFixed : '');\r\n    let children = this.props.children;\r\n    this.ref = React.createRef();\r\n\r\n    let top = 0;\r\n    let scrollLeft = 0;\r\n    let tableLeftBorder = 0;\r\n    let onChangeBorder;\r\n    const onFillCellWidth = this.props.onFillCellWidth;\r\n    const onFillLeftBorderArray = this.props.onFillLeftBorderArray;\r\n    const cellsWidth = this.props.cellsWidth;\r\n    const cellsFixedX = this.props.cellsFixedX;\r\n\r\n    // if (this.ref) {\r\n    //   this.ref.current.scrollLeft = this.props.scrollLeft;\r\n    // document.querySelector('.row-fixed').scrollLeft = this.props.scrollLeft;\r\n    // }\r\n    const rowFixed = document.querySelector('.row-fixed');\r\n    if (rowFixed) {\r\n      //console.log(document.querySelector('.row-fixed').scrollLeft);\r\n      rowFixed.scrollLeft = this.props.scrollLeft;\r\n    }\r\n\r\n    if (this.props.isFixed === 'row-fixed') {\r\n      if (this.props.isScrolledTop) {\r\n        className += ' fixed';\r\n        top = this.props.tableTopBorder;\r\n      }\r\n      //scrollTop = this.props.scrollTop;\r\n      //scrollTop = this.props.tableRef.current.scrollTop;\r\n      //console.log(this.props.tableRef);\r\n    }\r\n\r\n    // j нужна для нумерования фиксированных столбцов\r\n    let j = -1;\r\n\r\n    if (children !== undefined) {\r\n      if (!Array.isArray(children)) {\r\n        children = Array.of(children);\r\n      }\r\n      rows.push(\r\n        children.map((el, i) => {\r\n            if ((el.type === 'th') || (el.type === 'td')) {\r\n              if (el.props.className === 'col-fixed') {\r\n                if (this.props.isFixed === 'row-fixed') {\r\n                  onChangeBorder = this.props.onChangeBorder;\r\n                }\r\n                scrollLeft = this.props.scrollLeft;\r\n                tableLeftBorder = this.props.tableLeftBorder;\r\n                j++;\r\n              }\r\n              return <Cell className={el.type}\r\n                           isFixed={el.props.className}\r\n                           key={i}\r\n                           i={i}\r\n                           num={j}\r\n                           tableLeftBorder={tableLeftBorder}\r\n                           onChangeBorder={onChangeBorder}\r\n                           onFillCellWidth={onFillCellWidth}\r\n                           onFillLeftBorderArray={onFillLeftBorderArray}\r\n                           cellsWidth={cellsWidth}\r\n                           cellsFixedX={cellsFixedX}\r\n                           scrollLeft={scrollLeft}>\r\n                {el.props.children}\r\n              </Cell>\r\n            }\r\n            return el\r\n          }\r\n        )\r\n      );\r\n    }\r\n\r\n    return <div className={className} style={{top: top, width: this.state.width}} ref={this.ref}>\r\n      {rows}\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default FixedRow;\r\n","import React from 'react';\r\nimport Cell from \"./Cell\";\r\n\r\nclass Row extends React.Component {\r\n\r\n  render() {\r\n    let rows = [];\r\n    let className = this.props.className + ' ' + (this.props.isFixed ? this.props.isFixed : '');\r\n    let children = this.props.children;\r\n    const cellsWidth = this.props.cellsWidth;\r\n    const cellsFixedX = this.props.cellsFixedX;\r\n    const onFillCellWidth = this.props.onFillCellWidth;\r\n    const onFillLeftBorderArray = this.props.onFillLeftBorderArray;\r\n\r\n    let scrollLeft = 0;\r\n    let tableLeftBorder = 0;\r\n\r\n    let j = -1;\r\n\r\n    if (children !== undefined) {\r\n      if (!Array.isArray(children)) {\r\n        children = Array.of(children);\r\n      }\r\n      rows.push(\r\n        children.map((el, i) => {\r\n            if ((el.type === 'th') || (el.type === 'td')) {\r\n              if (el.props.className === 'col-fixed') {\r\n                scrollLeft = this.props.scrollLeft;\r\n                tableLeftBorder = this.props.tableLeftBorder;\r\n                j++;\r\n              }\r\n              return <Cell className={el.type}\r\n                           isFixed={el.props.className}\r\n                           key={i}\r\n                           i={i}\r\n                           num={j}\r\n                           tableLeftBorder={tableLeftBorder}\r\n                           cellsWidth={cellsWidth}\r\n                           cellsFixedX={cellsFixedX}\r\n                           onFillCellWidth={onFillCellWidth}\r\n                           onFillLeftBorderArray={onFillLeftBorderArray}\r\n                           scrollLeft={scrollLeft}>\r\n                {el.props.children}\r\n              </Cell>\r\n            }\r\n            return el\r\n          }\r\n        )\r\n      );\r\n    }\r\n\r\n    return <div className={className}>\r\n      {rows}\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Row;\r\n","import React from 'react';\r\nimport FixedRow from \"./FixedRow\";\r\nimport Row from \"./Row\";\r\n\r\nclass Table extends React.Component {\r\n\r\n  tableRef;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      scrollLeft: 0,\r\n      isScrolledTop: false,\r\n      cellsWidth: [],\r\n      cellsFixedX: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const tableRect = this.tableRef.current.getBoundingClientRect();\r\n    this.setState({\r\n      tableLeftBorder: [tableRect.x],\r\n      tableTopBorder: tableRect.top,\r\n    });\r\n  }\r\n\r\n  handleScroll = (e) => {\r\n    if (((e.target.scrollTop !== 0) || (e.target.scrollLeft !== 0)) && (!this.state.isScrolledTop)) {\r\n      this.setState(\r\n        {\r\n          isScrolledTop: true,\r\n        }\r\n      )\r\n    }\r\n    this.setState(\r\n      {\r\n        scrollLeft: e.target.scrollLeft,\r\n      }\r\n    )\r\n  };\r\n\r\n  handleChangeBorder = (tableLeftBorder) => {\r\n    this.setState((state) => {\r\n      // Если такого значения границы нет в массиве, то добавлять\r\n      return (!state.tableLeftBorder.includes(tableLeftBorder)) ?\r\n        {tableLeftBorder: [...state.tableLeftBorder, tableLeftBorder]} :\r\n        false;\r\n    });\r\n  };\r\n\r\n  handleChangeFixedRowBottom = (fixedRowBottom) => {\r\n    this.setState({fixedRowBottom: fixedRowBottom});\r\n  };\r\n\r\n  handleFillLeftBorderArray = (cellX, i) => (\r\n    this.setState((state) => {\r\n      let cellsFixedX = state.cellsFixedX;\r\n      if (cellsFixedX[i] === undefined) {\r\n        cellsFixedX.push(cellX);\r\n      } else if (cellX > cellsFixedX[i]) {\r\n        cellsFixedX[i] = cellX;\r\n      }\r\n      return {cellsFixedX: cellsFixedX}\r\n    })\r\n  );\r\n\r\n  handleFillCellWidth = (cellWidth, i) => (\r\n    this.setState((state) => {\r\n      let cellsWidth = state.cellsWidth;\r\n      if (cellsWidth[i] === undefined) {\r\n        cellsWidth.push(cellWidth);\r\n      } else if (cellWidth > cellsWidth[i]) {\r\n        cellsWidth[i] = cellWidth;\r\n      }\r\n      return {cellsWidth: cellsWidth}\r\n    })\r\n  );\r\n\r\n  render() {\r\n    const rows = [];\r\n    let children = this.props.children;\r\n    let className = '';\r\n    this.tableRef = React.createRef();\r\n    let paddingTop = 0;\r\n\r\n    const scrollLeft = this.state.scrollLeft;\r\n    const cellsWidth = this.state.cellsWidth;\r\n    const cellsFixedX = this.state.cellsFixedX;\r\n    const tableLeftBorder = this.state.tableLeftBorder;\r\n    const tableTopBorder = this.state.tableTopBorder;\r\n    const isScrolledTop = this.state.isScrolledTop;\r\n    const onChangeBorder = this.handleChangeBorder;\r\n    const onChangeFixedRowBottom = this.handleChangeFixedRowBottom;\r\n    const onFillCellWidth = this.handleFillCellWidth;\r\n    const onFillLeftBorderArray = this.handleFillLeftBorderArray;\r\n\r\n    if (isScrolledTop) {\r\n      paddingTop = this.state.fixedRowBottom;\r\n    }\r\n\r\n    if (children !== undefined) {\r\n      // если внутри не массив, то делаем массивом\r\n      if (!Array.isArray(children)) {\r\n        children = Array.of(children);\r\n      }\r\n\r\n      rows.push(\r\n        children.map((el, i) => {\r\n          if (el.type === 'thead') {\r\n            let child = el.props.children;\r\n            if (child !== undefined) {\r\n              if (!Array.isArray(child)) {\r\n                child = Array.of(child);\r\n              }\r\n              return child.map((el, i) => {\r\n                if (el.type === 'tr') {\r\n                  return <FixedRow className={el.type}\r\n                                   isFixed={el.props.className}\r\n                                   key={i}\r\n                                   tableLeftBorder={tableLeftBorder}\r\n                                   tableTopBorder={tableTopBorder}\r\n                                   onChangeBorder={onChangeBorder}\r\n                                   onChangeFixedRowBottom={onChangeFixedRowBottom}\r\n                                   onFillCellWidth={onFillCellWidth}\r\n                                   onFillLeftBorderArray={onFillLeftBorderArray}\r\n                                   isScrolledTop={isScrolledTop}\r\n                                   scrollLeft={scrollLeft}\r\n                                   cellsFixedX={cellsFixedX}\r\n                                   cellsWidth={cellsWidth}>\r\n                    {el.props.children}\r\n                  </FixedRow>\r\n                }\r\n                return el\r\n              })\r\n            }\r\n            return child\r\n          }\r\n          if ((el.type === 'tbody') || (el.type === 'tfoot')) {\r\n            let child = el.props.children;\r\n            if (child !== undefined) {\r\n              if (!Array.isArray(child)) {\r\n                child = Array.of(child);\r\n              }\r\n              return child.map((el, i) => {\r\n                if (el.type === 'tr') {\r\n                  return <Row className={el.type}\r\n                              isFixed={el.props.className}\r\n                              key={i}\r\n                              tableLeftBorder={tableLeftBorder}\r\n                              onFillCellWidth={onFillCellWidth}\r\n                              onFillLeftBorderArray={onFillLeftBorderArray}\r\n                              cellsWidth={cellsWidth}\r\n                              cellsFixedX={cellsFixedX}\r\n                              scrollLeft={scrollLeft}>\r\n                    {el.props.children}\r\n                  </Row>\r\n                }\r\n                return el\r\n              })\r\n            }\r\n            return child\r\n          }\r\n          return el\r\n        })\r\n      );\r\n    }\r\n\r\n    className += this.props.className + ' ' + (this.props.isFixed ? this.props.isFixed : '');\r\n    return (\r\n      <div className={className} ref={this.tableRef} onScroll={this.handleScroll} style={{paddingTop: paddingTop}}>\r\n        {rows}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\nimport Table from \"./Table/Table\";\r\n\r\nexport default function TestTable() {\r\n  return (\r\n    <Table className={'table'}>\r\n      <thead>\r\n      <React.Fragment/>\r\n      <tr className={'row-fixed'}>\r\n        <React.Fragment/>\r\n        <th><div>ghjghjghjhgjghjghjghjghjghj</div></th>\r\n        <th className={'col-fixed'}>ш2</th>\r\n        <th><table>\r\n          <tr><td>a</td><td>s</td></tr>\r\n          <tr><td>a</td><td>s</td></tr>\r\n          <tr><td>a</td><td>s</td></tr>\r\n          <tr><td>a</td><td>s</td></tr>\r\n          <tr><td>a</td><td>s</td></tr>\r\n          <tr><td>a</td><td>s</td></tr>\r\n          <tr><td>a</td><td>s</td></tr>\r\n          <tr><td>a</td><td>s</td></tr>\r\n          <tr><td>a</td><td>s</td></tr>\r\n        </table></th>\r\n        <th className={'col-fixed'}>ш4</th>\r\n        <th>ш5</th>\r\n        <th className={'col-fixed'}>ш6</th>\r\n        <th>ш7</th>\r\n        <th>ш8</th>\r\n        <th>ш9</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr>\r\n        <td>1</td>\r\n        <td className={'col-fixed'}>2</td>\r\n        <td><table>\r\n          <tr><td>a</td><td>s</td></tr>\r\n          <tr><td>a</td><td>s</td></tr>\r\n          <tr><td>a</td><td>s</td></tr>\r\n          <tr><td>a</td><td>s</td></tr>\r\n          <tr><td>a</td><td>s</td></tr>\r\n          <tr><td>a</td><td>s</td></tr>\r\n          <tr><td>a</td><td>s</td></tr>\r\n          <tr><td>a</td><td>s</td></tr>\r\n          <tr><td>a</td><td>s</td></tr>\r\n        </table></td>\r\n        <td className={'col-fixed'}>4</td>\r\n        <td>5</td>\r\n        <td className={'col-fixed'}>6</td>\r\n        <td>7</td>\r\n        <td>8</td>\r\n        <td>9</td>\r\n      </tr>\r\n      <tr>\r\n        <td>1</td>\r\n        <td className={'col-fixed'}>2</td>\r\n        <td>3</td>\r\n        <td className={'col-fixed'}>4</td>\r\n        <td>5</td>\r\n        <td className={'col-fixed'}>6</td>\r\n        <td>7</td>\r\n        <td>8</td>\r\n        <td>9</td>\r\n      </tr>\r\n      <tr>\r\n        <td>1</td>\r\n        <td className={'col-fixed'}>2</td>\r\n        <td>3</td>\r\n        <td className={'col-fixed'}>4</td>\r\n        <td>5</td>\r\n        <td className={'col-fixed'}>6</td>\r\n        <td>7</td>\r\n        <td>8</td>\r\n        <td>9</td>\r\n      </tr>\r\n      <tr>\r\n        <td>1</td>\r\n        <td className={'col-fixed'}>2</td>\r\n        <td>3</td>\r\n        <td className={'col-fixed'}>4</td>\r\n        <td>5</td>\r\n        <td className={'col-fixed'}>6</td>\r\n        <td>7</td>\r\n        <td>8</td>\r\n        <td>9</td>\r\n      </tr>\r\n      <tr>\r\n        <td>1</td>\r\n        <td className={'col-fixed'}>2</td>\r\n        <td>3</td>\r\n        <td className={'col-fixed'}>4</td>\r\n        <td>5</td>\r\n        <td className={'col-fixed'}>6</td>\r\n        <td>7</td>\r\n        <td>8</td>\r\n        <td>9</td>\r\n      </tr>\r\n      <tr>\r\n        <td>1</td>\r\n        <td className={'col-fixed'}>2</td>\r\n        <td>3</td>\r\n        <td className={'col-fixed'}>4</td>\r\n        <td>5</td>\r\n        <td className={'col-fixed'}>6</td>\r\n        <td>7</td>\r\n        <td>8</td>\r\n        <td>9</td>\r\n      </tr>\r\n      <tr>\r\n        <td>1</td>\r\n        <td className={'col-fixed'}>2</td>\r\n        <td>3</td>\r\n        <td className={'col-fixed'}>4</td>\r\n        <td>5</td>\r\n        <td className={'col-fixed'}>6</td>\r\n        <td>7</td>\r\n        <td>8</td>\r\n        <td>9</td>\r\n      </tr>\r\n      </tbody>\r\n    </Table>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport TestTable from \"./TestTable\";\r\n\r\nfunction App() {\r\n  return (\r\n    <TestTable/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}